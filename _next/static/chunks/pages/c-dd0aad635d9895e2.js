(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[570],{4538:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/c",function(){return s(1910)}])},5457:function(n,e,s){"use strict";s.d(e,{Z:function(){return p}});var a=s(5893),c=s(7294),l=s(1664),i=s.n(l),t=s(2489),o=s(9417),r=s(5869);let d=(0,a.jsx)("svg",{style:{position:"relative",top:"2px"},xmlns:"http://www.w3.org/2000/svg",height:"1em",viewBox:"0 0 384 512",children:(0,a.jsx)("path",{d:"M272 384c9.6-31.9 29.5-59.1 49.2-86.2l0 0c5.2-7.1 10.4-14.2 15.4-21.4c19.8-28.5 31.4-63 31.4-100.3C368 78.8 289.2 0 192 0S16 78.8 16 176c0 37.3 11.6 71.9 31.4 100.3c5 7.2 10.2 14.3 15.4 21.4l0 0c19.8 27.1 39.7 54.4 49.2 86.2H272zM192 512c44.2 0 80-35.8 80-80V416H112v16c0 44.2 35.8 80 80 80zM112 176c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-61.9 50.1-112 112-112c8.8 0 16 7.2 16 16s-7.2 16-16 16c-44.2 0-80 35.8-80 80z"})}),h=(0,a.jsx)("svg",{style:{position:"relative",top:"2px"},xmlns:"http://www.w3.org/2000/svg",height:"1em",viewBox:"0 0 384 512",children:(0,a.jsx)("path",{d:"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z"})});var m=n=>{let{active:e}=n,{darkmode:s,setDarkmode:l}=(0,c.useContext)(r.UserContext);return(0,a.jsx)("header",{children:(0,a.jsxs)("div",{className:"header",children:[["about","blog","projects","reading","running","c"].map(n=>n===e?(0,a.jsx)(i(),{style:{textDecoration:"underline"},href:"/".concat(n),children:n},n):(0,a.jsx)(i(),{href:"/".concat(n),children:n},n)),(0,a.jsxs)("div",{className:"header-icons",children:[(0,a.jsx)(i(),{href:"/feed.xml",children:(0,a.jsx)(t.G,{icon:o.Fwd})}),(0,a.jsx)("span",{onClick:()=>{l(!s)},children:s?h:d})]})]})})},p=n=>{let{active:e,children:s}=n;return(0,a.jsxs)("div",{children:[(0,a.jsx)(m,{active:e}),(0,a.jsx)("main",{children:s})]})}},1910:function(n,e,s){"use strict";s.r(e),s.d(e,{default:function(){return o}});var a=s(5893),c=s(1151),l=s(5457);let i=function(n){let{children:e}=n;return(0,a.jsx)(l.Z,{active:"c",children:(0,a.jsx)("div",{className:"content",children:e})})};function t(n){let e={a:"a",code:"code",div:"div",h1:"h1",li:"li",nav:"nav",ol:"ol",p:"p",pre:"pre",span:"span",...(0,c.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.nav,{className:"toc",children:(0,a.jsx)(e.ol,{className:"toc-level toc-level-1",children:(0,a.jsx)(e.li,{className:"toc-item toc-item-h1",children:(0,a.jsx)(e.a,{className:"toc-link toc-link-h1",href:"#overloading",children:"Overloading"})})})}),"\n",(0,a.jsx)(e.h1,{id:"overloading",children:"Overloading"}),"\n",(0,a.jsxs)(e.p,{children:["Let's say you want to overwrite an API-function located in a library that you don't have any control over or a standard\nlibrary function. This is useful when you want to stub that function in some test bench or insert debugging information\nin the function itself. To do this, we can make use of C-macros. Let's say we want to overwrite ",(0,a.jsx)(e.code,{children:"malloc"}),". We first\ndefine our own malloc like so:"]}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ",(0,a.jsx)(e.span,{className:"token function",children:"my_malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token class-name",children:"size_t"})," size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"{"}),"\n  ",(0,a.jsx)(e.span,{className:"token function",children:"printf"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token string",children:'"my_malloc"'}),(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n  ",(0,a.jsx)(e.span,{className:"token keyword",children:"return"})," ",(0,a.jsx)(e.span,{className:"token constant",children:"NULL"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"}"}),"\n"]})})}),"\n",(0,a.jsxs)(e.p,{children:["Then we can define the following macro to replace all instances of ",(0,a.jsx)(e.code,{children:"malloc"})," with our newly defined ",(0,a.jsx)(e.code,{children:"my_malloc"}),":"]}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsxs)(e.span,{className:"token macro property",children:[(0,a.jsx)(e.span,{className:"token directive-hash",children:"#"}),(0,a.jsx)(e.span,{className:"token directive keyword",children:"define"})," ",(0,a.jsx)(e.span,{className:"token macro-name",children:"malloc"})," ",(0,a.jsx)(e.span,{className:"token expression",children:"my_malloc"})]}),"\n"]})})}),"\n",(0,a.jsx)(e.p,{children:"Compiling and running yields us:"}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-bash",children:(0,a.jsxs)(e.code,{className:"language-bash",children:[(0,a.jsx)(e.span,{className:"token operator",children:">"})," clang main.c ",(0,a.jsx)(e.span,{className:"token operator",children:"&&"})," ./a.out\nmy_malloc\n"]})})}),"\n",(0,a.jsxs)(e.p,{children:["What if we want to make use of the original ",(0,a.jsx)(e.code,{children:"malloc"})," in our newly created ",(0,a.jsx)(e.code,{children:"my_malloc"}),"? This could be problematic as the define replaces all instances of ",(0,a.jsx)(e.code,{children:"malloc"})," with ",(0,a.jsx)(e.code,{children:"my_malloc"}),". So creating a ",(0,a.jsx)(e.code,{children:"my_malloc"})," like this will cause the macro to be recursively executed:"]}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ",(0,a.jsx)(e.span,{className:"token function",children:"my_malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token class-name",children:"size_t"})," size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"{"}),"\n  ",(0,a.jsx)(e.span,{className:"token function",children:"printf"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token string",children:'"my_malloc"'}),(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n  ",(0,a.jsx)(e.span,{className:"token keyword",children:"return"})," ",(0,a.jsx)(e.span,{className:"token function",children:"malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),"size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"}"}),"\n"]})})}),"\n",(0,a.jsx)(e.p,{children:"Compling and running this instead will result in:"}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-bash",children:(0,a.jsxs)(e.code,{className:"language-bash",children:[(0,a.jsx)(e.span,{className:"token operator",children:">"})," clang main.c ",(0,a.jsx)(e.span,{className:"token operator",children:"&&"})," ./a.out\nmy_mallocmy_mallocm",(0,a.jsx)(e.span,{className:"token punctuation",children:".."}),".y_malloSegmentation fault ",(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),"core dumped",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),"\n"]})})}),"\n",(0,a.jsxs)(e.p,{children:["Where the dots represent ",(0,a.jsx)(e.code,{children:"my_malloc"})," being printed MANY times."]}),"\n",(0,a.jsxs)(e.p,{children:["To make this work, we have to place ",(0,a.jsx)(e.code,{children:"my_malloc"})," in a separate source file. Since source files are preprocessed to\ntranslation units along with all the includes and compiled separately from each other, a define in e.g., ",(0,a.jsx)(e.code,{children:"main.c"})," will not affect a wrapper in e.g., ",(0,a.jsx)(e.code,{children:"malloc.c"}),". So we create the following files:"]}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsx)(e.span,{className:"token comment",children:"// malloc.c"}),"\n",(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ",(0,a.jsx)(e.span,{className:"token function",children:"my_malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token class-name",children:"size_t"})," size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"{"}),"\n  ",(0,a.jsx)(e.span,{className:"token function",children:"printf"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token string",children:'"my_malloc"'}),(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n  ",(0,a.jsx)(e.span,{className:"token keyword",children:"return"})," ",(0,a.jsx)(e.span,{className:"token function",children:"malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),"size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"}"}),"\n"]})})}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsx)(e.span,{className:"token comment",children:"// main.c"}),"\n",(0,a.jsxs)(e.span,{className:"token macro property",children:[(0,a.jsx)(e.span,{className:"token directive-hash",children:"#"}),(0,a.jsx)(e.span,{className:"token directive keyword",children:"define"})," ",(0,a.jsx)(e.span,{className:"token macro-name",children:"malloc"})," ",(0,a.jsx)(e.span,{className:"token expression",children:"my_malloc"})]}),"\n\n",(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ",(0,a.jsx)(e.span,{className:"token function",children:"my_malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token class-name",children:"size_t"})," size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n\n",(0,a.jsx)(e.span,{className:"token keyword",children:"int"})," ",(0,a.jsx)(e.span,{className:"token function",children:"main"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token keyword",children:"int"}),(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"{"}),"\n  ",(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ptr ",(0,a.jsx)(e.span,{className:"token operator",children:"="})," ",(0,a.jsx)(e.span,{className:"token function",children:"malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token number",children:"4"}),(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n  ",(0,a.jsx)(e.span,{className:"token keyword",children:"return"})," ",(0,a.jsx)(e.span,{className:"token number",children:"0"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n",(0,a.jsx)(e.span,{className:"token punctuation",children:"}"}),"\n"]})})}),"\n",(0,a.jsx)(e.p,{children:"Now it is possible to compile and execute without all those recursive calls:"}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-bash",children:(0,a.jsxs)(e.code,{className:"language-bash",children:[(0,a.jsx)(e.span,{className:"token operator",children:">"})," clang main.c malloc.c ",(0,a.jsx)(e.span,{className:"token operator",children:"&&"})," ./a.out\nmy_malloc\n"]})})}),"\n",(0,a.jsxs)(e.p,{children:["We can now wrap the function declaration in a header file and include it wherever we want to\noverwrite ",(0,a.jsx)(e.code,{children:"malloc"}),":"]}),"\n",(0,a.jsx)(e.div,{className:"remark-highlight",children:(0,a.jsx)(e.pre,{className:"language-c",children:(0,a.jsxs)(e.code,{className:"language-c",children:[(0,a.jsx)(e.span,{className:"token comment",children:"// malloc.h"}),"\n",(0,a.jsxs)(e.span,{className:"token macro property",children:[(0,a.jsx)(e.span,{className:"token directive-hash",children:"#"}),(0,a.jsx)(e.span,{className:"token directive keyword",children:"define"})," ",(0,a.jsx)(e.span,{className:"token macro-name",children:"malloc"})," ",(0,a.jsx)(e.span,{className:"token expression",children:"my_malloc"})]}),"\n\n",(0,a.jsx)(e.span,{className:"token keyword",children:"void"}),(0,a.jsx)(e.span,{className:"token operator",children:"*"})," ",(0,a.jsx)(e.span,{className:"token function",children:"my_malloc"}),(0,a.jsx)(e.span,{className:"token punctuation",children:"("}),(0,a.jsx)(e.span,{className:"token class-name",children:"size_t"})," size",(0,a.jsx)(e.span,{className:"token punctuation",children:")"}),(0,a.jsx)(e.span,{className:"token punctuation",children:";"}),"\n"]})})})]})}function o(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,a.jsx)(i,{...n,children:(0,a.jsx)(t,{...n})})}},1151:function(n,e,s){"use strict";s.d(e,{a:function(){return l}});var a=s(7294);let c=a.createContext({});function l(n){let e=a.useContext(c);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}}},function(n){n.O(0,[976,956,774,888,179],function(){return n(n.s=4538)}),_N_E=n.O()}]);